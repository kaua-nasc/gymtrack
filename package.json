{
  "name": "gymtrack",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "billing:db:generate": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:generate database/billing/typeorm/migration/migration  -d ./database/billing/typeorm/migration.datasource.ts",
    "billing:db:migrate": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:run -d ./database/billing/typeorm/migration.datasource.ts",
    "billing:db:drop": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js schema:drop -d ./database/billing/typeorm/migration.datasource.ts",
    "identity:db:generate": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:generate database/identity/typeorm/migration/migration  -d ./database/identity/typeorm/migration.datasource.ts",
    "identity:db:migrate": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:run -d ./database/identity/typeorm/migration.datasource.ts",
    "identity:db:drop": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js schema:drop -d ./database/identity/typeorm/migration.datasource.ts",
    "training-plan:db:generate": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:generate database/training-plan/typeorm/migration/migration  -d ./database/training-plan/typeorm/migration.datasource.ts",
    "training-plan:db:migrate": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:run -d ./database/training-plan/typeorm/migration.datasource.ts",
    "training-plan:db:drop": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js schema:drop -d ./database/training-plan/typeorm/migration.datasource.ts",
    "db:generate": "npm run billing:db:generate && npm run identity:db:generate && npm run training-plan:db:generate ",
    "db:setup": "npm run billing:db:migrate && npm run identity:db:migrate && npm run training-plan:db:migrate ",
    "docker:stop": "docker-compose stop",
    "docker:up": "docker-compose up --detach",
    "format": "prettier --write 'src/**/*.ts' 'test/**/*.ts' './*.{js,json}'",
    "format:check": "prettier --check 'src/**/*.ts' 'test/**/*.ts' './*.{js,json}'",
    "lint": "eslint 'src/**/*.ts' --fix",
    "lint:check": "eslint '{src,apps,libs,test}/**/*.ts'",
    "start:debug": "nest start --debug --watch",
    "start:dev": "nest start --watch",
    "start:prod": "node dist/main",
    "test": "npm run test:type && npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:db:setup": "dotenv -e .env.test -- npm run db:setup",
    "test:e2e": "jest --runInBand --config ./test/jest.e2e.ts --forceExit",
    "test:e2e:watch": "npm run test:e2e -- --watch",
    "test:integration": "jest --runInBand --config ./test/jest.integration.ts",
    "test:integration:watch": "npm run test:integration -- --watch",
    "test:type": "tsc --noEmit",
    "test:unit": "jest --config ./test/jest.unit.ts",
    "test:unit:watch": "npm run test:unit -- --watch"
  },
  "dependencies": {
    "@faker-js/faker": "^9.6.0",
    "@nestjs/apollo": "^13.0.3",
    "@nestjs/axios": "^4.0.0",
    "@nestjs/common": "^11.0.11",
    "@nestjs/config": "^4.0.1",
    "@nestjs/core": "^11.0.11",
    "@nestjs/event-emitter": "^3.0.1",
    "@nestjs/graphql": "^13.0.3",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/platform-express": "^11.0.11",
    "@nestjs/swagger": "^11.0.6",
    "@nestjs/typeorm": "^11.0.0",
    "@prisma/client": "^6.4.1",
    "axios": "^1.8.2",
    "bcrypt": "^5.1.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "eslint-plugin-no-relative-import-paths": "^1.6.1",
    "factory.ts": "^1.4.2",
    "knex": "^3.1.0",
    "nest-winston": "^1.10.2",
    "nock": "^14.0.1",
    "pg": "^8.13.3",
    "prisma": "^6.4.1",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.2",
    "typeorm": "^0.3.21",
    "typeorm-extension": "^3.7.0",
    "winston": "^3.17.0",
    "zod": "^3.24.2"
  },
  "devDependencies": {
    "@eslint/compat": "^1.2.7",
    "@eslint/eslintrc": "^3.3.0",
    "@eslint/js": "^9.22.0",
    "@nestjs/cli": "^11.0.5",
    "@nestjs/schematics": "^11.0.2",
    "@nestjs/testing": "^11.0.11",
    "@types/bcrypt": "^5.0.2",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.13.10",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^8.26.0",
    "@typescript-eslint/parser": "^8.26.0",
    "dotenv-cli": "^8.0.0",
    "eslint": "^9.22.0",
    "eslint-config-prettier": "^10.1.1",
    "eslint-import-resolver-typescript": "^3.8.3",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-prettier": "^5.2.3",
    "eslint-plugin-project-structure": "^3.13.2",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "jest-mock-extended": "^4.0.0-beta1",
    "prettier": "^3.5.3",
    "prettier-plugin-organize-imports": "^4.1.0",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.6",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.8.2"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
